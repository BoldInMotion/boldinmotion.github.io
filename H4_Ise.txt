H4

Opdracht 1




/**
 * Verzamelt gegevens artikelen
 * geeft hoeveelheid artikelen per artikel weer.
 * 
 * @author Ise An Verstegen 
 * @version 21/12/2020
 */
public class Artikel
{
    // instance variables
    private String artikelNaam;
    private String artikelOmschrijving;
    private int artikelAantal;

    /**
     * 
     *  Constructor for objects of class Artikel
     * 
     * @param artikelNaam = naam van artikel
     * @param artikelOmschrijving = omschrijvong van artikel
     * @param artikelAantal = aantal per artikel
     */
    
    public Artikel(String naam, String omschrijving)
    {
        // initialise instance variables
       artikelNaam = naam;
       artikelOmschrijving = omschrijving;
       artikelAantal = 0;
    }
   
    
    /**
     * 
     *  Constructoroverload for objects of class Artikel
     * 
     */
    public Artikel(String naam, String omschrijving, int aantal)
    {
        // initialise instance variables
       artikelNaam = naam;
       artikelOmschrijving = omschrijving;
       artikelAantal = aantal;
    }
    
    //Getters
    public int getArtikelAantal()
    {
        // put your code here
        return this.artikelAantal;
    }
    
    
    /**
     * Methods for objects of class Artikel.
     * to calculate amount after addition/substraction
     * 
     * to print all data of Artikel
     * 
     */
    public void artikelBij(int aantal)
    {
        artikelAantal += aantal;
    }
    
    public int artikelAf(int aantal)
    {
        artikelAantal -= aantal;
        return aantal;
    }
    
    public void print()
    {
        System.out.println("Artikel Naam: " + artikelNaam);
        System.out.println("Artikel Omschrijving: " + artikelOmschrijving);
        System.out.println("Artikel aantal: " + artikelAantal);
        System.out.println( "------------------" );
    }
}


/**
 * 
 * geeft totaal aantal van de verschillende Artikelen weer.
 * Maakt een lijst van de verschillende artikelen en print deze
 * 
 * @author Ise An Verstegen 
 * @version 21/12/2020
 */

//library to enable use of ArrayList
import java.util.*;

public class Winkel
{
    // instance variables
    // variable list from Artikel
    private ArrayList<Artikel> lijst;
    private int aantalArtikelen;
    
    /**
     * Constructor for objects of class Winkel
     * 
     * @param lijst = Arraylist of class Artikel
     * 
     */
    public Winkel()
    {
        lijst = new ArrayList<Artikel>();
    }

    /**
     * to count the amount of Artikel by giving it an index(starts from 0)
     * 
     * @param Artikel a = lijst van Artikel with index per Artikel
     * 
     */
    public Artikel getArtikel(String artikelNaam)
    {
        int index = Integer.parseInt(artikelNaam);
        Artikel a = lijst.get(index);
        return a;
    }
    
    //Getters
    public int getAantalArtikelen()
    {
        return lijst.size();
    }
    
    /**
     * Methods for objects of class Winkel.
     * to print all articles in one list
     * 
     * @param a = Artikel
     * 
     */
    public void printOverzicht()
    {
        System.out.println("Aantal Artikelen:");
        System.out.println(lijst.size());
        for(Artikel a : lijst)
        {
            a.print();
        }
    }
    
    /**
     * to add an article to the list of Winkel from class Artikel
     * 
     * @param a = Artikel
     * 
     */
    public void artikelToevoegen( Artikel a ) {
        lijst.add( a );
    }
}



Opdracht 2


/**
 * Datum: to construct a date (borrowed from kinderdagverblijf2)
 * 
 * @author Ise An Verstegen 
 * @version 22/12/2020
 */

public class Datum {
  // instance variables
  private int dag;
  private int maand;
  private int jaar;
  
  /**
     * Constructor for objects of class Datum
     * 
     * @param dag = day
     * @param maand = month
     * @param jaar = year
     * 
     */
  public Datum( int dag, int maand, int jaar ) {
    this.dag = dag;
    this.maand = maand;
    this.jaar = jaar;
  }
  
  // Getters
  public int getDag() {
    return dag;
  }

  public int getMaand() {
    return maand;
  }

  public int getJaar() {
    return jaar;
  }
  
  // Setters
  public void setDag( int dag ) {
    this.dag = dag;
  }

  public void setMaand( int maand ) {
    this.maand = maand;
  }

  public void setJaar( int jaar ) {
    this.jaar = jaar;
  }

  // Conversie naar String
  public String toString() {
    return dag + "-" + maand + "-" + jaar;
  }
}


/**
 * Results per subject.
 * 
 * @author Ise An Verstegen 
 * @version 22/12/2020
 */
public class Resultaten
{
    // instance variables
    // Datum inherited from class Datum
    private String naamVak;
    private int cijfer;
    private Datum datumTentamen; 

    /**
     * Constructor for objects of class Resultaten
     * 
     * @param naamVak = name of subject
     * @param cijfer = grade
     * @datumTentamen = date of test
     * 
     */
    public Resultaten(String naamVak, int cijfer, Datum datumTentamen)
    {
       this.naamVak = naamVak;
       this.cijfer = cijfer;
       this.datumTentamen = datumTentamen;
    }

    // Getters
    public String getNaamVak() {
        return naamVak;
    }
  
    public int getCijfer() {
        return cijfer;
    }
  
    public Datum getdatumTentamen() {
        return datumTentamen;
    }
  
    // Conversie
    public String toString() {
        return "vak: " + naamVak + 
               ",  cijfer: " + cijfer + 
               ", datum behaald: " + datumTentamen;
            }
}


/**
 * Data per student .
 * 
 * @author Ise An Verstegen 
 * @version 22/12/2020
 */

import java.util.*;

public class Student
{
    // instance variables
    // Datum inherited from class Datum
    // variable list from Resultaten
    private String naam;
    private Datum geboortedatum;
    private ArrayList<Resultaten> lijst;

    /**
     * Constructor for objects of class Student
     * 
     * @naam = name of student
     * @geboortedatum = date of birth of student
     * @param lijst = Arraylist of class Resultaten
     * 
     */
    public Student(String naam, Datum geboortedatum) 
    {
        this.naam = naam;
        this.geboortedatum = geboortedatum;
        lijst = new ArrayList<Resultaten>();
    }
  
    // Getters
    public String getNaam() 
    {
        return naam;
    }
  
    public Datum getGeboortedatum() 
    {
        return geboortedatum;
    }
  
    // Conversie
    public String toString() 
    {
        return naam + ",  geb: " + geboortedatum;
	//possibility: to also display the subjects and its results in the print of class Overzicht:
	//return naam + ",  geb: " + geboortedatum + "\n" + lijst;
    }
  
    /**
     * Methods for objects of class Student.
     * to print all results in one list
     * 
     * @param r = Resultaten
     * 
     */
    public void printOverzicht()
    {
        System.out.println(naam + ",  geb: " + geboortedatum);
        System.out.println("Overzicht behaalde resultaten");
        for(Resultaten r : lijst)
        {
            System.out.println( r );
        }
    }
   
    
    /**
     * to add a result to the list of Student from clas Resultaten
     * 
     * @param r = Resultaten
     * 
     */
    public void voegtoeResultaat( Resultaten r ) 
    {
        lijst.add( r );
    }  
}


/**
 * Overview of all Students from class Student.
 * 
 * @author Ise An Verstegen 
 * @version 22/12/2020
 */

import java.util.*;
public class Overzicht
{
    // instance variables - variable list from Student
    private ArrayList<Student> lijst;

    /**
     * Constructor for objects of class Overzicht
     * 
     * @param lijst = Arraylist of class Student
     * 
     */
    public Overzicht()
    {

       lijst = new ArrayList<Student>();
       
    }
    
    /**
     * Methods for objects of class Overzicht
     * to print all students in one list
     * 
     * @param s = Student
     * 
     */
    public void printOverzicht()
    {
        System.out.println("Overzicht alle studenten");
        for(Student s : lijst)
        {
            System.out.println( s );
        }
    }
  
    
    /**
     * to add a student to the list Overzicht from class Student
     * 
     * @param s = Student
     * 
     */
    
    public void voegToe( Student s ) 
    {
        lijst.add( s );
    }  
}
